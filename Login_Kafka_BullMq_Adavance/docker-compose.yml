version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.29.78:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    command: redis-server --appendonly yes

#   mongodb:
#     image: mongo
#     container_name: mongodb
#     volumes:
#       - data:/data/db
#     networks:
#       - backend_network

#   backend:
#     build: ./backend
#     container_name: backend
#     ports:
#       - "9000:9000"
#     volumes:
#       - ./backend:/app
#     depends_on:
#       - mongodb
#       - redis
#       - kafka
#     networks:
#       - backend_network

#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - "80:80"
#     depends_on:
#       - backend
#       - whoami
#     networks:
#       - backend_network

#   whoami:
#     image: traefik/whoami
#     container_name: whoami
#     networks:
#       - backend_network

# networks:
#   backend_network:
#     driver: bridge

# volumes:
#   data: